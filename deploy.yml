---
- hosts: databases
  gather_facts: False

  remote_user: root
  tasks:
    - name: install gnupg
      apt: name=gnupg state=latest update_cache=yes
    - name: Add mongo ppa key
      become: yes
      apt_key: >
        keyserver=hkp://keyserver.ubuntu.com:80
        id=9DA31620334BD75D9DCB49F368818C72E52529D4
        state=present
    - name: Add mongo sources list
      become: yes
      lineinfile: >
        regexp="bind_ip[ ]*=.*"
        line="deb http://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse"
        dest=/etc/apt/sources.list.d/mongodb.list
        state=present
        create=yes
    - name: Install mongo
      become: yes
      apt: name=mongodb-org state=latest update_cache=yes
    - name: bind to all ips
      become: yes
      lineinfile:
        regexp: "  bindIp:.*"
        line: "  bindIp: 0.0.0.0"
        dest: /etc/mongod.conf
        state: present
        create: yes
    - name: allow access from frontends
      become: yes
      iptables: 
        chain: INPUT
        source: "{{item}}"
        protocol: tcp
        destination_port: 27017
        match: state
        ctstate: NEW,ESTABLISHED
        jump: ACCEPT
        state: present
      loop: "{{groups['frontends']}}"
    - name: restart mongod
      become: yes
      service: name=mongod state=restarted
      

- hosts: frontends
  gather_facts: False

  remote_user: root
  tasks:
    - name: install git
      become: yes
      apt: name=git state=latest update_cache=yes
    - name: clone server
      become: yes
      git: repo=https://github.com/jerchu/CSE_356_Project.git dest=/var/www/server update=yes
    - name: install apache2
      become: yes
      apt: name=apache2 update_cache=yes state=latest
    - name: install mod_wsgi
      become: yes
      apt: name=libapache2-mod-wsgi-py3
    - name: install pip3
      become: yes
      apt: 
        name: python3-pip
        state: latest
        update_cache: yes
    - name: install postfix
      become: yes
      apt: 
        name: postfix
        update_cache: yes
    - name: reload postfix
      become: yes
      service: name=postfix state=reloaded
    - name: install Flask, Flask-Mail, PyMongo, py-bcrypt, and cerberus
      become: yes
      shell: pip3 install flask Flask-Mail pymongo py-bcrypt cerberus
    - name: copy conf file
      become: yes
      copy: src=/var/www/server/FlaskApp.conf dest=/etc/apache2/sites-available/server.conf remote_src=yes
    - name: start server
      become: yes
      command: a2ensite server.conf
      args:
        creates: /etc/apache2/sites-enabled/server.conf
    - name: disable default page
      become: yes
      command: a2dissite 000-default.conf
    - name: restart apache
      become: yes
      service: name=apache2 state=stopped
    - become: yes
      service: name=apache2 state=started

- hosts: nginx
  become: yes
  roles:
    - role: nginxinc.nginx
  vars:
    nginx_http_template_enable: true
    nginx_http_template:
      default:
        template_file: http/default.conf.j2
        conf_file_name: default.conf
        conf_file_location: /etc/nginx/conf.d/
        port: 80
        server_name: localhost
        error_page: /usr/share/nginx/html
        autoindex: false
        reverse_proxy:
          locations:
            frontend:
              location: /
              proxy_pass: http://frontend_servers
        upstreams:
          upstream_1:
            name: frontend_servers
            lb_method: least_conn
            zone_name: frontend
            zone_size: 64k
            sticky_cookie: false
            servers:
              frontend_server_1:
                address: localhost
                port: 80
                weight: 1
                health_check: max_fails=3 fail_timeout=5s
