---
- hosts: databases
  gather_facts: False

  remote_user: root
  tasks:
    # - name: install git
    #   become: yes
    #   apt: name=git state=latest update_cache=yes
    # - name: clone queue reader
    #   become: yes
    #   #git: repo=https://github.com/jerchu/CSE_356_Project.git dest=/var/www/server update=yes
    - name: install gnupg
      apt: name=gnupg state=latest update_cache=yes
    - name: Add mongo ppa key
      become: yes
      apt_key: >
        keyserver=hkp://keyserver.ubuntu.com:80
        id=9DA31620334BD75D9DCB49F368818C72E52529D4
        state=present
    - name: Add mongo sources list
      become: yes
      lineinfile: >
        regexp="bind_ip[ ]*=.*"
        line="deb http://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse"
        dest=/etc/apt/sources.list.d/mongodb.list
        state=present
        create=yes
    - name: Install mongo
      become: yes
      apt: name=mongodb-org state=latest update_cache=yes
    - name: Install Cassandra
      become: yes
      apt: name=cassandra state=latest update_cache=yes
    - name: Install RabbitMQ
      become: yes
      apt: name=rabbitmq-server state=latest update_cache=yes
    # - name: install pip3
    #   become: yes
    #   apt: 
    #     name: python3-pip
    #     state: latest
    #     update_cache: yes
    # - name: install pika
    #   become: yes
    #   shell: pip3 install pika
    - name: bind to all ips
      become: yes
      lineinfile:
        regexp: "  bindIp:.*"
        line: "  bindIp: 0.0.0.0"
        dest: /etc/mongod.conf
        state: present
        create: yes
    - name: allow access from frontends
      become: yes
      iptables: 
        chain: INPUT
        source: "{{item}}"
        protocol: tcp
        destination_port: 27017
        match: state
        ctstate: NEW,ESTABLISHED
        jump: ACCEPT
        state: present
      loop: "{{groups['frontends']}}"
    - name: restart mongod
      become: yes
      service: name=mongod state=restarted
    - name: restart cassandra
      become: yes
      service: name=cassandra state=restarted
    - name: restart rabbitmq-server
      become: yes
      service: name=rabbitmq-server state=restarted
      

- hosts: frontends
  gather_facts: False

  remote_user: root
  tasks:
    - name: install git
      become: yes
      apt: name=git state=latest update_cache=yes
    - name: clone server
      become: yes
      git: repo=https://github.com/jerchu/CSE_356_Project.git dest=/var/www/server update=yes
    - name: install apache2
      become: yes
      apt: name=apache2 update_cache=yes state=latest
    - name: install mod_wsgi
      become: yes
      apt: name=libapache2-mod-wsgi-py3
    - name: install pip3
      become: yes
      apt: 
        name: python3-pip
        state: latest
        update_cache: yes
    - name: install postfix
      become: yes
      apt: 
        name: postfix
        update_cache: yes
    - name: reload postfix
      become: yes
      service: name=postfix state=reloaded
    - name: Install RabbitMQ
      become: yes
      apt: name=rabbitmq-server state=latest update_cache=yes
    - name: install Flask, Flask-Mail, PyMongo, py-bcrypt, cerberus, cassandra-driver, and Celery
      become: yes
      shell: pip3 install flask Flask-Mail pymongo py-bcrypt cerberus cassandra-driver Celery
      environment:
        CASS_DRIVER_NO_CYTHON: 1
    - name: create celery user
      become: yes
      user:
        name: celery
        state: present
    - name: copy celery service file
      become: yes
      copy: src=/var/www/server/celery.service dest=/etc/systemd/system/celeryd.service remote_src=yes
    - name: copy celery conf file
      become: yes
      copy: src=/var/www/server/celery.conf dest=/etc/default/celeryd remote_src=yes
    - name: create log dir
      become: yes
      file:
        path: /var/log/celery
        state: directory
        owner: celery
        group: celery
    - name: create pid dir
      become: yes
      file:
        path: /var/run/celery
        state: directory
        owner: celery
        group: celery
    - name: copy conf file
      become: yes
      copy: src=/var/www/server/FlaskApp.conf dest=/etc/apache2/sites-available/server.conf remote_src=yes
    - name: reload daemons
      become: yes
      shell: systemctl daemon-reload
    - name: run celery at startup
      become: yes
      shell: systemctl enable celeryd
    - name: enable server
      become: yes
      command: a2ensite server.conf
      args:
        creates: /etc/apache2/sites-enabled/server.conf
    - name: disable default page
      become: yes
      command: a2dissite 000-default.conf
    - name: restart celery
      become: yes
      service: name=celeryd state=restarted
    - name: restart rabbitmq-server
      become: yes
      service: name=rabbitmq-server state=restarted
    - name: restart apache
      become: yes
      service: name=apache2 state=restarted

- hosts: balancers
  gather_facts: False

  remote_user: root
  become: yes
  tasks:
    - name: install nginx
      apt: name=nginx state=latest
    - name: Setup nginx conf
      template:
        src=nginx.conf.tpl
        dest=/etc/nginx/nginx.conf
    - name: Reload Nginx
      service:
        name=nginx
        state=reloaded